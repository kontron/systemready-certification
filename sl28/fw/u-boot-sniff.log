U-Boot SPL 2021.10-rc3-00036-gadea187350 (Sep 13 2021 - 16:52:44 +0200)
Trying to boot from SPI
NOTICE:  BL31: v1.5(release):LSDK-20.04-update-290520-1-ga5d788c82
NOTICE:  BL31: Built : 13:21:33, Sep 10 2021
NOTICE:  Welcome to LS1028 BL31 Phase


U-Boot 2021.10-rc3-00036-gadea187350 (Sep 13 2021 - 16:52:44 +0200)

SoC:  LS1028A Rev1.0 (0x870b0110)
Clock Configuration:
       CPU0(A72):1300 MHz  CPU1(A72):1300 MHz  
       Bus:      400  MHz  DDR:      1600 MT/s
Reset Configuration Word (RCW):
       00000000: 34004010 00000030 00000000 00000000
       00000010: 00000000 008f0000 0030c000 00000000
       00000020: 06200000 00002580 00000000 00019016
       00000030: 00000000 00000048 00000000 00000000
       00000040: 00000000 00000000 00000000 00000000
       00000050: 00000000 00000000 00000000 00000000
       00000060: 00000304 00000000 000e7000 00000000
       00000070: bb580000 00020000
Model: Kontron SMARC-sAL28 (Dual PHY)
EL:    2
DRAM:  3.9 GiB
DDR    3.9 GiB (DDR3, 32-bit, CL=11, ECC on)
SEC0:  RNG instantiated
Using SERDES1 Protocol: 47960 (0xbb58)
MMC:   FSL_SDHC: 1, FSL_SDHC: 0
Loading Environment from SPIFlash... SF: Detected w25q32dw with page size 256 Bytes, erase size 64 KiB, total 4 MiB
OK
PCIe1: pcie@3400000 Root Complex: no link
PCIe2: pcie@3500000 Root Complex: no link
In:    serial@21c0500
Out:   serial@21c0500
Err:   serial@21c0500
Net:   eth0: enetc-0, eth1: enetc-1
Hit any key to stop autoboot:  0 
=> help
?         - alias for 'help'
askenv    - get environment variables from stdin
base      - print or set address offset
bdinfo    - print Board Info structure
blkcache  - block cache diagnostics and control
boot      - boot default, i.e., run 'bootcmd'
bootd     - boot default, i.e., run 'bootcmd'
bootefi   - Boots an EFI payload from memory
bootelf   - Boot from an ELF image in memory
booti     - boot Linux kernel 'Image' format from memory
bootm     - boot application image from memory
bootp     - boot image via network using BOOTP/TFTP protocol
bootvx    - Boot vxWorks from an ELF image
cmp       - memory compare
coninfo   - print console devices and information
cp        - memory copy
cpu       - Multiprocessor CPU boot manipulation and release
crc32     - checksum calculation
date      - get/set/reset date & time
dcache    - enable or disable data cache
dhcp      - boot image via network using DHCP/TFTP protocol
dm        - Driver model low level access
echo      - echo args to console
editenv   - edit environment variable
efidebug  - Configure UEFI environment
env       - environment handling commands
exit      - exit script
ext2load  - load binary file from a Ext2 filesystem
ext2ls    - list files in a directory (default /)
ext4load  - load binary file from a Ext4 filesystem
ext4ls    - list files in a directory (default /)
ext4size  - determine a file's size
false     - do nothing, unsuccessfully
fatinfo   - print information about filesystem
fatload   - load binary file from a dos filesystem
fatls     - list files in a directory (default /)
fatmkdir  - create a directory
fatrm     - delete a file
fatsize   - determine a file's size
fatwrite  - write file into a dos filesystem
fdt       - flattened device tree utility commands
fstype    - Look up a filesystem type
fstypes   - List supported filesystem types
go        - start application at address 'addr'
gpt       - GUID Partition Table
grepenv   - search environment variables
gzwrite   - unzip and write memory to block device
hash      - compute hash message digest
help      - print command description/usage
i2c       - I2C sub-system
icache    - enable or disable instruction cache
iminfo    - print header information for application image
imxtract  - extract a part of a multi-image
itest     - return true/false on integer compare
ln        - Create a symbolic link
load      - load binary file from a filesystem
loadb     - load binary file over serial line (kermit mode)
loads     - load S-Record file over serial line
loadx     - load binary file over serial line (xmodem mode)
loady     - load binary file over serial line (ymodem mode)
loop      - infinite loop on address range
ls        - list files in a directory (default /)
lzmadec   - lzma uncompress a memory region
md        - memory display
mdio      - MDIO utility commands
mii       - MII utility commands
mm        - memory modify (auto-incrementing address)
mmc       - MMC sub system
mmcinfo   - display MMC info
mw        - memory write (fill)
net       - NET sub-system
nfs       - boot image via network using NFS protocol
nm        - memory modify (constant address)
nvme      - NVM Express sub-system
panic     - Panic with optional message
part      - disk partition related commands
pci       - list and access PCI Configuration Space
ping      - send ICMP ECHO_REQUEST to network host
printenv  - print environment variables
pxe       - commands to get and boot from pxe files
random    - fill memory with random pattern
reset     - Perform RESET of the CPU
rng       - print bytes from the hardware random number generator
run       - run commands in an environment variable
save      - save file to a filesystem
saveenv   - save environment variables to persistent storage
scsi      - SCSI sub-system
scsiboot  - boot from SCSI device
setenv    - set environment variables
setexpr   - set environment variable as the result of eval expression
sf        - SPI flash sub-system
showvar   - print local hushshell variables
size      - determine a file's size
sl28      - SMARC-sAL28 specific
sleep     - delay execution for some time
source    - run script from memory
sysboot   - command to get and boot from syslinux files
test      - minimal test like /bin/sh
tftpboot  - boot image via network using TFTP protocol
true      - do nothing, successfully
unlz4     - lz4 uncompress a memory region
unzip     - unzip a memory region
usb       - USB sub-system
usbboot   - boot from USB device
version   - print monitor, compiler and linker version
=> version
U-Boot 2021.10-rc3-00036-gadea187350 (Sep 13 2021 - 16:52:44 +0200)

aarch64-linux-gnu-gcc (Debian 10.2.1-6) 10.2.1 20210110
GNU ld (GNU Binutils for Debian) 2.35.2
=> printenv
arch=arm
baudrate=115200
board=sl28
board_name=sl28
boot_a_script=load ${devtype} ${devnum}:${distro_bootpart} ${scriptaddr} ${prefix}${script}; source ${scriptaddr}
boot_efi_binary=load ${devtype} ${devnum}:${distro_bootpart} ${kernel_addr_r} efi/boot/bootaa64.efi; if fdt addr ${fdt_addr_r}; then bootefi ${kernel_addr_r} ${fdt_addr_r};else bootefi ${kernel_addr_r} ${fdtcontroladdr};fi
boot_efi_bootmgr=if fdt addr ${fdt_addr_r}; then bootefi bootmgr ${fdt_addr_r};else bootefi bootmgr;fi
boot_extlinux=sysboot ${devtype} ${devnum}:${distro_bootpart} any ${scriptaddr} ${prefix}${boot_syslinux_conf}
boot_net_usb_start=usb start
boot_pci_enum=pci enum
boot_prefixes=/ /boot/
boot_script_dhcp=boot.scr.uimg
boot_scripts=boot.scr.uimg boot.scr
boot_syslinux_conf=extlinux/extlinux.conf
boot_targets=mmc1
bootcmd=run distro_bootcmd
bootcmd_dhcp=devtype=dhcp; run boot_net_usb_start; run boot_pci_enum; if dhcp ${scriptaddr} ${boot_script_dhcp}; then source ${scriptaddr}; fi;setenv efi_fdtfile ${fdtfile}; setenv efi_old_vci ${bootp_vci};setenv efi_old_arch ${bootp_arch};setenv bootp_vci PXEClient:Arch:00011:UNDI:003000;setenv bootp_arch 0xb;if dhcp ${kernel_addr_r}; then tftpboot ${fdt_addr_r} dtb/${efi_fdtfile};if fdt addr ${fdt_addr_r}; then bootefi ${kernel_addr_r} ${fdt_addr_r}; else bootefi ${kernel_addr_r} ${fdtcontroladdr};fi;fi;setenv bootp_vci ${efi_old_vci};setenv bootp_arch ${efi_old_arch};setenv efi_fdtfile;setenv efi_old_arch;setenv efi_old_vci;
bootcmd_mmc0=devnum=0; run mmc_boot
bootcmd_mmc1=devnum=1; run mmc_boot
bootcmd_nvme0=devnum=0; run nvme_boot
bootcmd_pxe=run boot_net_usb_start; run boot_pci_enum; dhcp; if pxe get; then pxe boot; fi
bootcmd_scsi0=devnum=0; run scsi_boot
bootcmd_usb0=devnum=0; run usb_boot
bootdelay=3
bootm_size=0x10000000
cpu=armv8
dfu_alt_info=sf 0:0=u-boot-bin raw 0x210000 0x1d0000;u-boot-env raw 0x3e0000 0x20000
distro_bootcmd=scsi_need_init=; setenv nvme_need_init; for target in ${boot_targets}; do run bootcmd_${target}; done
efi_dtb_prefixes=/ /dtb/ /dtb/current/
env_addr=0x203e0004
envload=env import -d -b ${env_addr}
eth1addr=00:a0:a5:5c:6b:63
ethaddr=00:a0:a5:5c:6b:62
fdt_addr_r=0x88000000
fdtcontroladdr=fbb26eb0
fdtfile=freescale/fsl-ls1028a-kontron-sl28.dtb
install_rcw=source 20200000
kernel_addr_r=0x82000000
load_efi_dtb=load ${devtype} ${devnum}:${distro_bootpart} ${fdt_addr_r} ${prefix}${efi_fdtfile}
loadaddr=0x82000000
mmc_boot=if mmc dev ${devnum}; then devtype=mmc; run scan_dev_for_boot_part; fi
nvme_boot=run boot_pci_enum; run nvme_init; if nvme dev ${devnum}; then devtype=nvme; run scan_dev_for_boot_part; fi
nvme_init=if ${nvme_need_init}; then setenv nvme_need_init false; nvme scan; fi
pxefile_addr_r=0x80100000
ramdisk_addr_r=0x88080000
scan_dev_for_boot=echo Scanning ${devtype} ${devnum}:${distro_bootpart}...; for prefix in ${boot_prefixes}; do run scan_dev_for_extlinux; run scan_dev_for_scripts; done;run scan_dev_for_efi;
scan_dev_for_boot_part=part list ${devtype} ${devnum} -bootable devplist; env exists devplist || setenv devplist 1; for distro_bootpart in ${devplist}; do if fstype ${devtype} ${devnum}:${distro_bootpart} bootfstype; then run scan_dev_for_boot; fi; done; setenv devplist
scan_dev_for_efi=setenv efi_fdtfile ${fdtfile}; for prefix in ${efi_dtb_prefixes}; do if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${efi_fdtfile}; then run load_efi_dtb; fi;done;run boot_efi_bootmgr;if test -e ${devtype} ${devnum}:${distro_bootpart} efi/boot/bootaa64.efi; then echo Found EFI removable media binary efi/boot/bootaa64.efi; run boot_efi_binary; echo EFI LOAD FAILED: continuing...; fi; setenv efi_fdtfile
scan_dev_for_extlinux=if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${boot_syslinux_conf}; then echo Found ${prefix}${boot_syslinux_conf}; run boot_extlinux; echo SCRIPT FAILED: continuing...; fi
scan_dev_for_scripts=for script in ${boot_scripts}; do if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${script}; then echo Found U-Boot script ${prefix}${script}; run boot_a_script; echo SCRIPT FAILED: continuing...; fi; done
scriptaddr=0x80000000
scsi_boot=run scsi_init; if scsi dev ${devnum}; then devtype=scsi; run scan_dev_for_boot_part; fi
scsi_init=if ${scsi_need_init}; then scsi_need_init=false; scsi scan; fi
serdes0=85bb
serial#=USD0G0002
soc=fsl-layerscape
stderr=serial@21c0500
stdin=serial@21c0500
stdout=serial@21c0500
usb_boot=usb start; if usb dev ${devnum}; then devtype=usb; run scan_dev_for_boot_part; fi
vendor=kontron

Environment size: 4490/8187 bytes
=> printenv -e
Scanning disk mmc@2140000.blk...
Scanning disk mmc@2150000.blk...
** Unrecognized filesystem type **
Found 7 disks
PlatformLang:
    8be4df61-93ca-11d2-aa0d-00e098032b8c EFI_GLOBAL_VARIABLE_GUID
    NV|BS|RT, DataSize = 0x6
    00000000: 65 6e 2d 55 53 00                                en-US.
ExitBootServicesTestVariable:
    f6fab04f-acaf-4af3-b9fa-dcf97fb4426f 
    NV|BS|RT, DataSize = 0x8
    00000000: 02 00 00 00 00 00 00 80                          ........
SecureBoot:
    8be4df61-93ca-11d2-aa0d-00e098032b8c EFI_GLOBAL_VARIABLE_GUID
    BS|RT|RO, DataSize = 0x1
    00000000: 00                                               .
SetupMode:
    8be4df61-93ca-11d2-aa0d-00e098032b8c EFI_GLOBAL_VARIABLE_GUID
    BS|RT|RO, DataSize = 0x1
    00000000: 01                                               .
AuditMode:
    8be4df61-93ca-11d2-aa0d-00e098032b8c EFI_GLOBAL_VARIABLE_GUID
    BS|RT|RO, DataSize = 0x1
    00000000: 00                                               .
DeployedMode:
    8be4df61-93ca-11d2-aa0d-00e098032b8c EFI_GLOBAL_VARIABLE_GUID
    BS|RT|RO, DataSize = 0x1
    00000000: 00                                               .
VendorKeys:
    8be4df61-93ca-11d2-aa0d-00e098032b8c EFI_GLOBAL_VARIABLE_GUID
    BS|RT|RO, DataSize = 0x1
    00000000: 00                                               .
PlatformLangCodes:
    8be4df61-93ca-11d2-aa0d-00e098032b8c EFI_GLOBAL_VARIABLE_GUID
    BS|RT|RO, DataSize = 0x6
    00000000: 65 6e 2d 55 53 00                                en-US.
OsIndicationsSupported:
    8be4df61-93ca-11d2-aa0d-00e098032b8c EFI_GLOBAL_VARIABLE_GUID
    BS|RT|RO, DataSize = 0x8
    00000000: 1c 00 00 00 00 00 00 00                          ........
OsIndications:
    8be4df61-93ca-11d2-aa0d-00e098032b8c EFI_GLOBAL_VARIABLE_GUID
    NV|BS|RT, DataSize = 0x8
    00000000: 00 00 00 00 00 00 00 00                          ........
=> bdinfo
boot_params = 0x0000000000000000
DRAM bank   = 0x0000000000000000
-> start    = 0x0000000080000000
-> size     = 0x000000007be00000
DRAM bank   = 0x0000000000000001
-> start    = 0x0000002080000000
-> size     = 0x0000000080000000
flashstart  = 0x0000000000000000
flashsize   = 0x0000000000000000
flashoffset = 0x0000000000000000
baudrate    = 115200 bps
relocaddr   = 0x00000000fbd32000
reloc off   = 0x0000000065d32000
Build       = 64-bit
current eth = enetc-0
ethaddr     = 00:a0:a5:5c:6b:62
IP addr     = <NULL>
fdt_blob    = 0x00000000fbb26eb0
new_fdt     = 0x00000000fbb26eb0
fdt_size    = 0x0000000000008f00
lmb_dump_all:
 memory.cnt  = 0x2
 memory[0]	[0x80000000-0xfbdfffff], 0x7be00000 bytes flags: 0
 memory[1]	[0x2080000000-0x20ffffffff], 0x80000000 bytes flags: 0
 reserved.cnt  = 0x1
 reserved[0]	[0xfbb25a40-0xfbdfffff], 0x002da5c0 bytes flags: 0
arch_number = 0x0000000000000000
TLB addr    = 0x00000000fbdf0000
irq_sp      = 0x00000000fbb26ea0
sp start    = 0x00000000fbb26ea0
Early malloc usage: e38 / 4000
=> rtc list
Unknown command 'rtc' - try 'help'
=> sf probe
SF: Detected w25q32dw with page size 256 Bytes, erase size 64 KiB, total 4 MiB
=> usb reset
resetting USB...
Bus usb@3100000: Register 200017f NbrPorts 2
Starting the controller
USB XHCI 1.00
Bus usb@3110000: Register 200017f NbrPorts 2
Starting the controller
USB XHCI 1.00
scanning bus usb@3100000 for devices... 1 USB Device(s) found
scanning bus usb@3110000 for devices... 3 USB Device(s) found
       scanning usb for storage devices... 0 Storage Device(s) found
=> usb info
1: Hub,  USB Revision 3.0
 - U-Boot XHCI Host Controller 
 - Class: Hub
 - PacketSize: 512  Configurations: 1
 - Vendor: 0x0000  Product 0x0000 Version 1.0
   Configuration: 1
   - Interfaces: 1 Self Powered 0mA
     Interface: 0
     - Alternate Setting 0, Endpoints: 1
     - Class Hub
     - Endpoint 1 In Interrupt MaxPacket 8 Interval 255ms

1: Hub,  USB Revision 3.0
 - U-Boot XHCI Host Controller 
 - Class: Hub
 - PacketSize: 512  Configurations: 1
 - Vendor: 0x0000  Product 0x0000 Version 1.0
   Configuration: 1
   - Interfaces: 1 Self Powered 0mA
     Interface: 0
     - Alternate Setting 0, Endpoints: 1
     - Class Hub
     - Endpoint 1 In Interrupt MaxPacket 8 Interval 255ms

2: Hub,  USB Revision 2.0
 - Class: Hub
 - PacketSize: 64  Configurations: 1
 - Vendor: 0x0424  Product 0x2517 Version 0.2
   Configuration: 1
   - Interfaces: 1 Self Powered Remote Wakeup 2mA
     Interface: 0
     - Alternate Setting 0, Endpoints: 1
     - Class Hub
     - Endpoint 1 In Interrupt MaxPacket 1 Interval 12ms
     - Endpoint 1 In Interrupt MaxPacket 1 Interval 12ms

3: Human Interface,  USB Revision 1.10
 - WIBU-SYSTEMS AG CodeMeter-Stick 000004384618
 - Class: (from Interface) Human Interface
 - PacketSize: 64  Configurations: 1
 - Vendor: 0x064f  Product 0x2af9 Version 1.0
   Configuration: 1
   - Interfaces: 1 Bus Powered 100mA
     Interface: 0
     - Alternate Setting 0, Endpoints: 1
     - Class Human Interface, Subclass: None
     - Endpoint 1 In Interrupt MaxPacket 64 Interval 250ms

=> mmc rescan
=> mmc list
FSL_SDHC: 1 (SD)
FSL_SDHC: 0 (eMMC)
=> mmc info
Device: FSL_SDHC
Manufacturer ID: 13
OEM: 14e
Name: S0J58 
Bus Speed: 150000000
Mode: HS400 (200MHz)
Rd Block Len: 512
MMC version 5.1
High Capacity: Yes
Capacity: 29.6 GiB
Bus Width: 8-bit DDR
Erase Group Size: 512 KiB
HC WP Group Size: 16 MiB
User Capacity: 29.6 GiB ENH WRREL
User Enhanced Start: 0 Bytes
User Enhanced Size: 29.6 GiB
Boot Capacity: 31.5 MiB ENH
RPMB Capacity: 4 MiB ENH
Boot area 0 is not write protected
Boot area 1 is not write protected
=> efidebug devices
Device           Device Path
================ ====================
00000000fbb35ea0 /VenHw(e61d73b9-a384-4acc-aeab-82e828f3628b)
00000000fbb36400 /VenHw(e61d73b9-a384-4acc-aeab-82e828f3628b)/SD(1)/SD(0)
00000000fbb3bc60 /VenHw(e61d73b9-a384-4acc-aeab-82e828f3628b)/SD(1)/SD(0)/HD(1,GPT,85b731b6-a4b2-47f4-b1c6-aef6e0f2ce81,0x800,0xfffff)
00000000fbb3c030 /VenHw(e61d73b9-a384-4acc-aeab-82e828f3628b)/SD(1)/SD(0)/HD(2,GPT,ac600dc7-3160-4f3c-a824-496d00e3d007,0x100800,0x18fff)
00000000fbb36e80 /VenHw(e61d73b9-a384-4acc-aeab-82e828f3628b)/eMMC(0)/eMMC(1)
00000000fbb37220 /VenHw(e61d73b9-a384-4acc-aeab-82e828f3628b)/eMMC(0)/eMMC(1)/HD(1,GPT,ad3b2f8a-a34c-4657-a880-aaaa5177e249,0x800,0x100000)
00000000fbb37630 /VenHw(e61d73b9-a384-4acc-aeab-82e828f3628b)/eMMC(0)/eMMC(1)/HD(2,GPT,30d10a49-83b4-4d96-b7f9-da1aede9b830,0x100800,0x3837000)
00000000fbb379d0 /VenHw(e61d73b9-a384-4acc-aeab-82e828f3628b)/eMMC(0)/eMMC(1)/HD(3,GPT,3a83a98b-5491-4015-a0bd-17d590fae9c6,0x3937800,0x1e8000)
00000000fbb42e80 /VenHw(e61d73b9-a384-4acc-aeab-82e828f3628b)/MAC(00a0a55c6b62,1)
=> efidebug drivers
Driver           Name                 Image Path
================ ==================== ====================
00000000fbb399a0 <NULL>               <built-in>
=> efidebug dh     
Handle           Protocols
================ ====================
00000000fbb35ea0 Device Path, Device Path To Text, Device Path Utilities, Device-Tree Fixup, Unicode Collation 2, HII String, HII Database, Random Number Generator
00000000fbb36050 Simple Text Output
00000000fbb360c0 Simple Text Input, Simple Text Input Ex
00000000fbb36400 Device Path, Block IO
00000000fbb3bc60 Device Path, Block IO, Simple File System
00000000fbb3c030 Device Path, Block IO, Simple File System
00000000fbb36e80 Device Path, Block IO
00000000fbb37220 Device Path, Block IO, System Partition, Simple File System
00000000fbb37630 Device Path, Block IO, Simple File System
00000000fbb379d0 Device Path, Block IO
00000000fbb399a0 Driver Binding
00000000fbb39a10 Firmware Management
00000000fbb42e80 Simple Network, Device Path, PXE Base Code
=> efidebug memmap
Type             Start            End              Attributes
================ ================ ================ ==========
IO               0000000001e60000-0000000001e61000 RT
CONVENTIONAL     0000000080000000-00000000fab25000 WB
RUNTIME DATA     00000000fab25000-00000000fab26000 WB|RT
LOADER DATA      00000000fab26000-00000000fbd30000 WB
RUNTIME CODE     00000000fbd30000-00000000fbd40000 WB|RT
LOADER DATA      00000000fbd40000-00000000fbe00000 WB
CONVENTIONAL     0000002080000000-00000020fffd4000 WB
BOOT DATA        00000020fffd4000-00000020fffe1000 WB
LOADER DATA      00000020fffe1000-00000020fffe2000 WB
BOOT DATA        00000020fffe2000-00000020fffe6000 WB
RUNTIME DATA     00000020fffe6000-00000020fffe7000 WB|RT
BOOT DATA        00000020fffe7000-00000020fffe9000 WB
RUNTIME DATA     00000020fffe9000-00000020fffeb000 WB|RT
BOOT DATA        00000020fffeb000-00000020fffec000 WB
RUNTIME DATA     00000020fffec000-00000020ffff0000 WB|RT
BOOT DATA        00000020ffff0000-0000002100000000 WB
=> efidebug tables
b122a263-3661-4f68-9929-78f8b0d62180 EFI System Resource Table
eb66918a-7eef-402a-842e-931d21c38ae9 Runtime properties
eb9d2d31-2d88-11d3-9a16-0090273fc14d SMBIOS table
=> efidebug boot dump
=> efidebug hello ${fdtcontroladdr}
efidebug - Configure UEFI environment

Usage:
efidebug   - UEFI Shell-like interface to configure UEFI environment

efidebug boot add -b <bootid> <label> <interface> <devnum>[:<part>] <file path> -i <interface> <devnum>[:<part>] <initrd file path> -s '<optional data>'
  - set UEFI BootXXXX variable
    <load options> will be passed to UEFI application
efidebug boot rm <bootid#1> [<bootid#2> [<bootid#3> [...]]]
  - delete UEFI BootXXXX variables
efidebug boot dump
  - dump all UEFI BootXXXX variables
efidebug boot next <bootid>
  - set UEFI BootNext variable
efidebug boot order [<bootid#1> [<bootid#2> [<bootid#3> [...]]]]
  - set/show UEFI boot order

efidebug capsule update [-v] <capsule address>
  - process a capsule
efidebug capsule disk-update
  - update a capsule from disk
efidebug capsule show <capsule address>
  - show capsule information
efidebug capsule result [<capsule result var>]
  - show a capsule update result
efidebug capsule esrt
  - print the ESRT

efidebug devices
  - show UEFI devices
efidebug drivers
  - show UEFI drivers
efidebug dh
  - show UEFI handles
efidebug images
  - show loaded images
efidebug memmap
  - show UEFI memory map
efidebug tables
  - show UEFI configuration tables
efidebug test bootmgr
  - run simple bootmgr for test
efidebug query [-nv][-bs][-rt][-at]
  - show size of UEFI variables store

=> efidebug selftest ${fdtcontroladdr}
efidebug - Configure UEFI environment

Usage:
efidebug   - UEFI Shell-like interface to configure UEFI environment

efidebug boot add -b <bootid> <label> <interface> <devnum>[:<part>] <file path> -i <interface> <devnum>[:<part>] <initrd file path> -s '<optional data>'
  - set UEFI BootXXXX variable
    <load options> will be passed to UEFI application
efidebug boot rm <bootid#1> [<bootid#2> [<bootid#3> [...]]]
  - delete UEFI BootXXXX variables
efidebug boot dump
  - dump all UEFI BootXXXX variables
efidebug boot next <bootid>
  - set UEFI BootNext variable
efidebug boot order [<bootid#1> [<bootid#2> [<bootid#3> [...]]]]
  - set/show UEFI boot order

efidebug capsule update [-v] <capsule address>
  - process a capsule
efidebug capsule disk-update
  - update a capsule from disk
efidebug capsule show <capsule address>
  - show capsule information
efidebug capsule result [<capsule result var>]
  - show a capsule update result
efidebug capsule esrt
  - print the ESRT

efidebug devices
  - show UEFI devices
efidebug drivers
  - show UEFI drivers
efidebug dh
  - show UEFI handles
efidebug images
  - show loaded images
efidebug memmap
  - show UEFI memory map
efidebug tables
  - show UEFI configuration tables
efidebug test bootmgr
  - run simple bootmgr for test
efidebug query [-nv][-bs][-rt][-at]
  - show size of UEFI variables store

=> 
